name: lms_app

services:
  mongo1:
    image: mongo:latest
    container_name: lms_app
    command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
    ports:
      - 27017:27017
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    environment:
      - MONGO_INITDB_DATABASE=mongo1
      # - MONGO_INITDB_ROOT_USERNAME=admin
      # - MONGO_INITDB_ROOT_PASSWORD=admin
    restart: unless-stopped
    volumes:
      - 'mongodb_config:/data/configdb' # Named volume for configdb
      - '$PWD/.docker/mongo/db:/data/db' # Host volume
  mongo-express:
    image: mongo-express
    ports:
      - '8080:8081'
    environment:
      - ME_CONFIG_MONGODB_SERVER=lms_app
      #- ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      #- ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://mongo1:27017/?replicaSet=rs0
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
    restart: unless-stopped
    depends_on:
      mongo1:
        condition: service_healthy

volumes:
  mongodb_config: # Named volume
